import "strings"

providers = {
	"google": {
		"alias": "",
		"config": {
			"access_token": {
				"references": [
					"var.access_token",
				],
			},
		},
		"module_address":      "",
		"name":                "google",
		"provider_config_key": "google",
		"version_constraint":  "",
	},
}

resources = {
	"google_bigquery_dataset.dataset": {
		"address": "google_bigquery_dataset.dataset",
		"config": {
			"dataset_id": {
				"constant_value": "example_dataset",
			},
			"default_table_expiration_ms": {
				"constant_value": 3600000,
			},
			"description": {
				"constant_value": "This is a test description",
			},
			"friendly_name": {
				"constant_value": "test",
			},
			"labels": {
				"constant_value": {
					"env": "default",
				},
			},
			"location": {
				"constant_value": "US",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "dataset",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_bigquery_dataset",
	},
	"google_pubsub_topic.example": {
		"address": "google_pubsub_topic.example",
		"config": {
			"message_storage_policy": [
				{
					"allowed_persistence_regions": {
						"constant_value": [
							"us-central1",
							"us-east-1",
							"us-west-1",
						],
					},
				},
			],
			"name": {
				"constant_value": "example-topic",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_pubsub_topic",
	},
}

provisioners = {}

variables = {
	"access_token": {
		"default":        null,
		"description":    "access token",
		"module_address": "",
		"name":           "access_token",
	},
}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
